{"version":3,"sources":["Components/Login/Login.module.css","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx"],"names":["module","exports","main","button","form","inputs","inputCont","password","error","LoginReduxForm","reduxForm","props","react_default","a","createElement","onSubmit","handleSubmit","className","styles","Field","component","InputField","name","placeholder","validate","requiredSymbol","maxLengthLogin","minLengthLogin","type","maxLengthPass","minLengthPass","value","maxLengthField","minLengthField","connect","state","isAuth","authData","login","react_router","to","formData","email","rememberMe"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,KAAA,oBAAAC,OAAA,sBAAAC,KAAA,oBAAAC,OAAA,sBAAAC,UAAA,yBAAAC,SAAA,wBAAAC,MAAA,8JCqBLC,EAAiBC,YAAU,CAAEN,KAAM,SAAlBM,CAdZ,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMK,aAAcC,UAAWC,IAAOd,MAClDQ,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOZ,WACnBM,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOb,QAAQO,EAAAC,EAAAC,cAAA,sBAAmBF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,UAAWC,IAAYC,KAAM,QAASC,YAAY,QAAQC,SAAU,CAACC,IAAgBd,EAAMe,eAAgBf,EAAMgB,mBAC1Kf,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOb,OAAS,IAAMa,IAAOX,UAAWK,EAAAC,EAAAC,cAAA,yBAAsBF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,UAAWC,IAAYO,KAAK,WAAWN,KAAM,WAAYC,YAAY,WAAWC,SAAU,CAACC,IAAgBd,EAAMkB,cAAelB,EAAMmB,mBAE/NlB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,UAAW,QAASE,KAAM,aAAcM,KAAM,aAA1D,iBACCjB,EAAMH,OAASI,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOV,OAAQG,EAAMH,OACrDI,EAAAC,EAAAC,cAAA,SAAOQ,KAAM,SAAUM,KAAM,SAAUX,UAAWC,IAAOf,OAAQ4B,MAAM,gBCT/EL,EAAiBM,YAAe,IAChCL,EAAiBM,YAAe,GAEhCJ,EAAgBG,YAAe,IAC/BF,EAAgBG,YAAe,GA0BpBC,sBARS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,SAASD,SAMS,CAAEE,WAA3BJ,CAvBD,SAACvB,GAKX,OAAIA,EAAMyB,OAAexB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUC,GAAG,aAElC5B,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOhB,MACnBU,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAACL,EAAD,CAAgBM,SARP,SAAC0B,GACd9B,EAAM2B,MAAMG,EAASC,MAAOD,EAASlC,SAAUkC,EAASE,aAOhBjB,eAAgBA,EAAgBC,eAAgBA,EAAgBE,cAAeA,EAAeC,cAAeA","file":"static/js/5.5c648802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__m17bZ\",\"button\":\"Login_button__3fWaR\",\"form\":\"Login_form__HyRgq\",\"inputs\":\"Login_inputs__3Lypi\",\"inputCont\":\"Login_inputCont__3dIQs\",\"password\":\"Login_password__23s12\",\"error\":\"Login_error__VUlrX\"};","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InputField } from '../CommonFile/Utils/CustomForm/myInputs';\r\nimport { requiredSymbol } from '../CommonFile/Utils/FormControl/FormValidator';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.form}>\r\n            <div className={styles.inputCont}>\r\n                <div className={styles.inputs}><span>Login:</span><Field component={InputField} name={\"email\"} placeholder=\"login\" validate={[requiredSymbol, props.maxLengthLogin, props.minLengthLogin]} /></div>\r\n                <div className={styles.inputs + \" \" + styles.password} ><span>Password:</span><Field component={InputField} type=\"password\" name={\"password\"} placeholder=\"password\" validate={[requiredSymbol, props.maxLengthPass, props.minLengthPass]} /></div>\r\n            </div>\r\n            <div><Field component={\"input\"} name={\"rememberMe\"} type={\"checkbox\"} />  remember me</div>\r\n            {props.error && <div className={styles.error}>{props.error}</div>}\r\n            <input name={\"button\"} type={\"submit\"} className={styles.button} value=\"Login in\" />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm); //оборачиваем нужную форму \r\n","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport { maxLengthField, minLengthField } from '../CommonFile/Utils/FormControl/FormValidator';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../Redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LoginReduxForm } from './Login';\r\n\r\nlet maxLengthLogin = maxLengthField(30);\r\nlet minLengthLogin = minLengthField(5);\r\n\r\nlet maxLengthPass = maxLengthField(15);\r\nlet minLengthPass = minLengthField(8);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) return <Redirect to='/profile' />\r\n    return (\r\n        <div className={styles.main}>\r\n            <h2>Welcome to my Social Network</h2>\r\n            <LoginReduxForm onSubmit={onSubmit} maxLengthLogin={maxLengthLogin} minLengthLogin={minLengthLogin} maxLengthPass={maxLengthPass} minLengthPass={minLengthPass} />\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authData.isAuth\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}