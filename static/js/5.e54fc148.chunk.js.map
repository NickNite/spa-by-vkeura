{"version":3,"sources":["Components/Login/Login.module.css","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx"],"names":["module","exports","main","text","button","form","inputs","captchaInput","checkbox","captcha","LoginReduxForm","reduxForm","props","react_default","a","createElement","onSubmit","handleSubmit","className","styles","inputCont","Field","component","InputField","name","placeholder","validate","requiredSymbol","maxLengthLogin","minLengthLogin","password","type","maxLengthPass","minLengthPass","captchaUrl","src","error","value","maxLengthField","minLengthField","connect","state","isAuth","authData","login","react_router","to","formData","email","rememberMe"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,KAAA,oBAAAC,KAAA,oBAAAC,OAAA,sBAAAC,KAAA,oBAAAC,OAAA,sBAAAC,aAAA,4BAAAC,SAAA,wBAAAC,QAAA,iKC6BLC,EAAiBC,YAAU,CAAEN,KAAM,SAAlBM,CAtBZ,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMK,aAAcC,UAAWC,IAAOd,MAClDQ,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOC,WACnBP,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOb,QACnBO,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,UAAWC,IAAYC,KAAM,QAASC,YAAY,QAAQC,SAAU,CAACC,IAAgBf,EAAMgB,eAAgBhB,EAAMiB,mBAE5HhB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOb,OAAS,IAAMa,IAAOW,UACzCjB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,UAAWC,IAAYQ,KAAK,WAAWP,KAAM,WAAYC,YAAY,WAAWC,SAAU,CAACC,IAAgBf,EAAMoB,cAAepB,EAAMqB,mBAGrJpB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOX,UAAUK,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,UAAW,QAASE,KAAM,aAAcO,KAAM,aAAtF,iBACCnB,EAAMsB,YAAcrB,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOV,QAAS0B,IAAKvB,EAAMsB,aAC/DtB,EAAMsB,YAAcrB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOH,UAAWC,IAAOZ,aAAce,UAAWC,IAAYC,KAAM,UAAWC,YAAY,qBAAqBC,SAAU,KAC9Id,EAAMwB,OAASvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAASN,EAAMwB,OAC9CvB,EAAAC,EAAAC,cAAA,SAAOS,KAAM,SAAUO,KAAM,SAAUb,UAAWC,IAAOf,OAAQiC,MAAM,gBCjB/ET,EAAiBU,YAAe,IAChCT,EAAiBU,YAAe,GAEhCP,EAAgBM,YAAe,IAC/BL,EAAgBM,YAAe,GA6BpBC,sBATS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,SAASD,OACvBR,WAAYO,EAAME,SAAST,aAMK,CAAEU,WAA3BJ,CA1BD,SAAC5B,GAKX,OAAIA,EAAM8B,OAAe7B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,GAAG,aAElCjC,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOjB,MACnBW,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOhB,MACnBU,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAACL,EAAD,CAAgBwB,WAAYtB,EAAMsB,WAAYlB,SAVrC,SAAC+B,GACdnC,EAAMgC,MAAMG,EAASC,MAAOD,EAASjB,SAAUiB,EAASE,WAAYF,EAAStC,UASPmB,eAAgBA,EAAgBC,eAAgBA,EAAgBG,cAAeA,EAAeC,cAAeA","file":"static/js/5.e54fc148.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__m17bZ\",\"text\":\"Login_text__1Xp7U\",\"button\":\"Login_button__3fWaR\",\"form\":\"Login_form__HyRgq\",\"inputs\":\"Login_inputs__3Lypi\",\"captchaInput\":\"Login_captchaInput__3CX7D\",\"checkbox\":\"Login_checkbox__3KSJH\",\"captcha\":\"Login_captcha__2sHwn\"};","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InputField } from '../CommonFile/Utils/CustomForm/myInputs';\r\nimport { requiredSymbol } from '../CommonFile/Utils/FormControl/FormValidator';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.form}>\r\n            <div className={styles.inputCont}>\r\n                <div className={styles.inputs}>\r\n                    <span>Login:</span>\r\n                    <Field component={InputField} name={\"email\"} placeholder=\"login\" validate={[requiredSymbol, props.maxLengthLogin, props.minLengthLogin]} />\r\n                </div>\r\n                <div className={styles.inputs + \" \" + styles.password} >\r\n                    <span>Password:</span>\r\n                    <Field component={InputField} type=\"password\" name={\"password\"} placeholder=\"password\" validate={[requiredSymbol, props.maxLengthPass, props.minLengthPass]} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.checkbox}><Field component={\"input\"} name={\"rememberMe\"} type={\"checkbox\"} />  remember me</div>\r\n            {props.captchaUrl && <img className={styles.captcha} src={props.captchaUrl} />}\r\n            {props.captchaUrl && <Field className={styles.captchaInput} component={InputField} name={\"captcha\"} placeholder=\"symbols from image\" validate={[]} />}\r\n            {props.error && <div className='error'>{props.error}</div>}\r\n            <input name={\"button\"} type={\"submit\"} className={styles.button} value=\"Login in\" />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm); //оборачиваем нужную форму \r\n","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport { maxLengthField, minLengthField } from '../CommonFile/Utils/FormControl/FormValidator';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../Redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LoginReduxForm } from './Login';\r\n\r\nlet maxLengthLogin = maxLengthField(30);\r\nlet minLengthLogin = minLengthField(5);\r\n\r\nlet maxLengthPass = maxLengthField(15);\r\nlet minLengthPass = minLengthField(4);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) return <Redirect to='/profile' />\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.text}>\r\n                <h2>Welcome</h2>\r\n            </div >\r\n            <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} maxLengthLogin={maxLengthLogin} minLengthLogin={minLengthLogin} maxLengthPass={maxLengthPass} minLengthPass={minLengthPass} />\r\n        </div >\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authData.isAuth,\r\n        captchaUrl: state.authData.captchaUrl\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}